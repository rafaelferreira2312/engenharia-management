name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:10.8
        env:
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: testing_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis:6.2
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, mysql, redis
        coverage: pcov
    
    - name: Install dependencies
      run: |
        cd backend
        composer install --no-interaction --prefer-dist --optimize-autoloader
    
    - name: Copy .env
      run: |
        cd backend
        cp .env.example .env
        sed -i 's/DB_HOST=.*/DB_HOST=mariadb/' .env
        sed -i 's/DB_DATABASE=.*/DB_DATABASE=testing_db/' .env
        sed -i 's/DB_USERNAME=.*/DB_USERNAME=root/' .env
        sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=/' .env
        php artisan key:generate
    
    - name: Run migrations and tests
      run: |
        cd backend
        php artisan migrate:fresh --env=testing
        php artisan test
    
  build-deploy:
    needs: test-backend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push backend
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/engineering-backend:latest ./backend
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/engineering-backend:latest
    
    - name: Build and push frontend
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/engineering-frontend:latest ./frontend
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/engineering-frontend:latest
    
    - name: Deploy to production
      run: |
        ssh ${{ secrets.SSH_HOST }} "docker-compose pull && docker-compose up -d"